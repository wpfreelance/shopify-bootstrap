<div class="sheet">
    <div class="row">
      <div class="col-sm-3">
        {% include 'wpf_side_bar' %}
      </div>
      <div class="col-sm-9 padding-right">
        <div class="product-details"><!--product-details-->
            <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
            <meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">
            <div class="col-sm-5">
              <!-- Lets make a simple image magnifier -->
              <div class="view-product magnify">
                <div id="magni" class="large">

              	</div>
                {% assign featured_image = product.selected_or_first_available_variant.featured_image | default: product.featured_image %}
                <img id ="wpf-p-img" src="{{ featured_image | img_url: '2048x2048' }}" alt="{{ featured_image.alt | escape }}" class="img-responsive small" style="width:200px;">
              <!--<h3>{{ product.title }}</h3>-->
							</div>

              <div id="similar-product" >
                {% comment %} TODO: product image gallery on mobile - swipe between images & hide thumbs {% endcomment %}



                  {% comment %}
                    TODO: Trying to use srcset but it's not totally working properly yet
                    Waiting on Shopify to implement image width filter
          <!--
                  <img src="{{ featured_image | img_url: 'medium' }}"
                       srcset="{{ featured_image | img_url: 'medium' }} 240w,
                               {{ featured_image | img_url: 'large' }} 480w,
                               {{ featured_image | img_url: 'grande' }} 600w,
                               {{ featured_image | img_url: '1024x1024' }} 1024w,
                               {{ featured_image | img_url: '2048x2048' }} 2048w"
                       sizes="(min-width: 768px) 40%,
                              100%"
                       alt="{{ featured_image.alt | escape }}">
          -->
                  {% endcomment %}
                  <div id="owl-demo">

                    {% comment %}
                      Show thumbs for product image gallery.

                      Collect any variant id (first) associated with each thumb and include it as a data-attr to be used with the image switcher.
                      Clicking a thumb to change the image also changes the selected variant if it is linked to it.
                    {% endcomment %}

                    {% if product.images.size > 1 %}
                    {% for thumb in product.images %}
                      {% assign image_variant_id = false %}
                      {% if thumb.attached_to_variant? %}
                        {% assign image_variant_id = thumb.variants.first.id %}
                      {% endif %}
                      <div class="item"><a href="{{ thumb | img_url: 'master' }}" data-gallery-main=".magnify img" {% if image_variant_id %}data-variant-id="{{ image_variant_id }}"{% endif %} onclick="setTimeout(myFunction, 300)" ><img src="{{ thumb | img_url: 'large' }}" alt="{{ thumb.alt | escape }}"></a></div>
                    {% endfor %}
                    {% endif %}
                  </div>
                </div>
             </div>

             <div class="col-sm-7">
               <div class="product-information"><!--/product-information-->

 								<h2>{{ product.title }}</h2>

                <section class="product-details" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                  {% comment note: Get first variant, or deep linked one %}{% endcomment %}
                  {% assign variant = product.selected_or_first_available_variant %}

                  {% if settings.hide_pricing != true or variant.price > 0 %}
                  <meta itemprop="priceCurrency" content="{{ shop.currency }}">
                  {% unless variant.sku == blank %}<meta itemprop="identifier" content="sku:{{ variant.sku }}" />{% endunless %}
                  <link itemprop="availability" href="http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}">

                  <div class="product-details-content">
                    <span class="product-price">
                      <p class="compare-at-price small text-muted">
                        {% comment note: Leave compare-at-price element in markup even if empty so we can grab it with JS if we need to %}{% endcomment %}
                        {% if variant.compare_at_price > variant.price %}
                          {% capture price %}{% include '_price' with variant.compare_at_price %}{% endcapture %}
                          {% capture price_with_currency %}{% include '_price_with_currency' with variant.compare_at_price %}{% endcapture %}
                          {{ 'products.price.compare_at_price_html' | t: price: price, price_with_currency: price_with_currency }}
                        {% endif %}
                      </p>
                      <p class="price" itemprop="price">
                        {% capture price %}{% assign show_zero = true %}{% include '_price' with variant.price %}{% endcapture %}
                        {% capture price_with_currency %}{% assign show_zero = true %}{% include '_price_with_currency' with variant.price %}{% endcapture %}
                        {% if variant.compare_at_price > variant.price %}
                          {{ 'products.price.sale_price_html' | t: price: price, price_with_currency: price_with_currency }}
                        {% else %}
                          {{ 'products.price.standard_price_html' | t: price: price, price_with_currency: price_with_currency }}
                        {% endif %}
                      </p>
                    </span>

                    {% comment TODO: sale badges %}{% endcomment %}

                    <form class="add-to-cart-form" action="/cart/add" method="post" enctype="multipart/form-data">
                      <div class="form-group">
                        <select class="product-select form-control" id="product-select" name="id">
                        {% for variant in product.variants %}
                          {% if variant.available %}
                            <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>
                          {% else %}
                            <option disabled="disabled">
                              {{ variant.title }} - {{ 'products.product.sold_out' | t }}
                            </option>
                          {% endif %}
                        {% endfor %}
                        </select>
                      </div>

                      <div class="form-group product-quantity">
                        <label class="quantity-selector control-label" for="quantity">{{ 'products.form.quantity' | t }}</label>
                        <input class="quantity-selector form-control" type="number" id="quantity" name="quantity" value="1" min="1">
                      </div>

                      <input class="btn-add-to-cart btn btn-primary btn-lg btn-block" type="submit" name="add" value="{{ 'products.buttons.add_to_cart' | t }}">
                    </form>
                    <div class="add-to-cart-message hidden"></div>
                  </div>
                  {% endif %}

                  {% include 'product_social_share_links' %}


                </section>

 							</div><!--/product-information-->


    
  </div>
</div>
  <div class="category-tab shop-details-tab"><!--category-tab-->
    <div class="col-sm-12">
      <ul class="nav nav-tabs">
        <li><a href="#details" data-toggle="tab">Details</a></li>
        <li class="active"><a href="#reviews" data-toggle="tab">Reviews</a></li>
      </ul>
    </div>
    <div class="tab-content">
      <div class="tab-pane fade" id="details" >
        <div class="col-sm-12">
         {% include 'product_description' with product.description %}
        </div>
      </div>

      <div class="tab-pane fade active in" id="reviews" >
        <div class="col-sm-12">
            <div id="shopify-product-reviews" data-id="{{product.id}}">
              {{ product.metafields.spr.reviews }}
            </div>
        </div>
      </div>

    </div>
  </div><!--/category-tab-->

  </div>
</div>
</div>


<style>

    /*Lets create the magnifying glass*/
    .large {
    width: 175px; height: 175px;
    position: absolute;
    border-radius: 100%;

    /*Multiple box shadows to achieve the glass effect*/
    box-shadow: 0 0 0 7px rgba(255, 255, 255, 0.85),
    0 0 7px 7px rgba(0, 0, 0, 0.25),
    inset 0 0 40px 2px rgba(0, 0, 0, 0.25);

    /*Lets load up the large image first*/
     background: url('{{ featured_image | img_url: '2048x2048' }}') no-repeat;

    /*hide the glass by default*/
    display: none;
    }

</style>
<script>

  // Select callback is called every time a variant selector is changed
  var select_callback = function(variant, selector) {
    // collect price and button elements
    var $product_price_ele = $('.product-price');
    var $compare_at_price_ele = $product_price_ele.find('.compare-at-price');
    var $price_money_ele = $product_price_ele.find('.price');
    var $add_to_cart_button = $('.btn-add-to-cart');

    // Translation strings
    // price strings uses a marker that is replaced so as to preserve Shopify translations
    {% assign price_marker = '<span class=\"money\" data-price=\"[raw_price]\" data-currency=\"{{ shop.currency }}\">[price]</span>' %}
    {% assign price_with_currency_marker = '<span class=\"money\" data-price=\"[raw_price]\" data-currency=\"{{ shop.currency }}\">[price_with_currency]</span>' %}

    var standard_price_str = "{{ 'products.price.standard_price_html' | t: price: price_marker, price_with_currency: price_with_currency_marker }}";
    var compare_at_str = "{{ 'products.price.compare_at_price_html' | t: price: price_marker, price_with_currency: price_with_currency_marker }}";
    var sale_price_str = "{{ 'products.price.sale_price_html' | t: price: price_marker, price_with_currency: price_with_currency_marker }}";
    var unavailable_str = "{{ 'products.price.unavailable' | t }}";
    var zero_price_str = "{{ 'products.price.zero_price' | t }}";

    if (variant) {
      // get formated variant price and set it
      if (variant.price == 0) {
        var raw_price = 0;
        var price = zero_price_str;
        var price_with_currency = zero_price_str;
      } else {
        var raw_price = variant.price;
        var price = Shopify.formatMoney(variant.price, Bsify.money_formats.moneyFormat);
        var price_with_currency = Shopify.formatMoney(variant.price, Bsify.money_formats.moneyWithCurrencyFormat);
      }

      if (variant.compare_at_price > variant.price) {
        // It's on sale
        var sale_price = sale_price_str
          .replace('[raw_price]', raw_price)
          .replace('[price]', price)
          .replace('[price_with_currency]', price_with_currency);
        $price_money_ele.removeClass('text-muted').html(sale_price);

        // update compare at price
        var raw_compare_at_price = variant.compare_at_price;
        var compare_at_price = Shopify.formatMoney(variant.compare_at_price, Bsify.money_formats.moneyFormat);
        var compare_at_price_with_currency = Shopify.formatMoney(variant.compare_at_price, Bsify.money_formats.moneyWithCurrencyFormat);
        var compare_at = compare_at_str
          .replace('[raw_price]', raw_compare_at_price)
          .replace('[price]', compare_at_price)
          .replace('[price_with_currency]', compare_at_price_with_currency);
        $compare_at_price_ele.html(compare_at).removeClass('hidden');

      } else {
        // It's the standard price
        var standard_price = standard_price_str
          .replace('[raw_price]', raw_price)
          .replace('[price]', price)
          .replace('[price_with_currency]', price_with_currency);
        $price_money_ele.removeClass('text-muted').html(standard_price);

        $compare_at_price_ele.addClass('hidden');
      }

      if (variant.available) {
        $add_to_cart_button.removeClass('disabled').attr('disabled', false).val(Bsify.translations.product.add_to_cart_button_text);

        if (Bsify.Cart !== undefined && Bsify.Cart.has_variant(variant.id)) {
          $add_to_cart_button.val(Bsify.translations.product.add_another_button_text);
        }

      } else { // variant is sold out
        $add_to_cart_button.addClass('disabled').attr('disabled', 'disabled').val(Bsify.translations.product.sold_out_button_text);
        // TODO: add notify me form
      }

      // Switch the main image if the variant has one
      if (variant.featured_image) {
        if (Bsify.ImageSwitcher !== undefined) {
          var mainImageElement = $('.product-image-main img')[0];
          Bsify.ImageSwitcher.switch_image(mainImageElement, variant.featured_image.src);
        }
      }
    } else {
      // The variant dosn't exist so unset details
      $add_to_cart_button.addClass('disabled').attr('disabled', 'disabled').val(Bsify.translations.product.unavailable_button_text);
      $price_money_ele.addClass('text-muted').text(unavailable_str);
      $compare_at_price_ele.addClass('hidden');
    }
  };

  jQuery(function($) {
    new Shopify.OptionSelectors('product-select', {
      product: {{ product | json }},
      onVariantSelected: select_callback,
      enableHistoryState: true
    });

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label class="control-label" for="productSelect-option-0">{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}
  });
</script>
